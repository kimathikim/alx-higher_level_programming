The "0-add_integer" module
==========================

import function from a mudule:
    >>> add_integer = __import__('0-add_integer').add_integer

adding 1 and 2:
    >>> add_integer(1, 2)
    3

adding 100 and -2:
    >>> add_integer(100, -2)
    98

adding 2:
    >>> add_integer(2)
    100

adding 100.3, -2:
    >>> add_integer(100.3, -2)
    98

adding a number to a string:
    >>> add_integer(4, "School")
    Traceback (most recent call last):
            ...
    TypeError: b must be an integer

passing None:
    >>> add_integer(None)
    Traceback (most recent call last)
            ...
    TypeError: a must be an integer

adding two char:
    >>> add_integer('2', '4')
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

Adding a tuple
    >>> add_integer((1, 1))
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

Adding a number and a list
    >>> add_integer(123, [])
    Traceback (most recent call last):
	      ...
    TypeError: b must be an integer

Passing a string
    >>> add_integer("Hello")
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

Adding two float numbers
    >>> add_integer(2.9, 2.9)
    4

Subtracting 98 and 1
    >>> add_integer(-1)
    97

Case Overflow:
    >>> add_integer(float('inf'), 0)
    Traceback (most recent calllast):
            ...
    OverflowError: cannot convert float infinity to integer

case Overflow 2:
    >>> add_integer(float('inf'), float('inf'))
    Traceback (most recent call last)
            ...
    OverflowError: cannot convert float infinity to integer

case NaN:
    >>> add_integer(0, float('nan')
    Traceback (most recent call last)
            ...
    ValueError: cannot convert NaN to integer
